generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator dbml {
  provider            = "prisma-dbml-generator"
  output              = "./dbml"
  outputName          = "seed-model.dbml"
  projectName         = "SEED 2.0"
  projectDatabaseType = "PostgreSQL"
  projectNote         = "SEED 2.0"
}

generator docs {
  provider = "node node_modules/prisma-docs-generator"
  output   = "./docs"
}

enum Role {
  ADMIN
  USER
  GUIDE
  LEADER
}

enum Status {
  ACTIVE
  INACTIVE
  BLOCKED
}

model Admin {
id                String       @id @default(uuid())
name              String
email             String       @unique
phone             String?
profileImage      String?
roles             Role[]       @default([USER])
isActive          Boolean      @default(true)
isBlocked         Boolean      @default(false)
lastLoggedIn      DateTime?    @default(now())
createdAt         DateTime     @default(now())
updatedAt         DateTime     @updatedAt

@@map("admins")
}

model User {
  id              String                @id @default(uuid())
  name            String?
  email           String                @unique
  phone           String?
  profileImage    String?
  status          Status?               @default(ACTIVE)
  roles           UserRole[]
  dob             DateTime?
  address         Address?
  professional    ProfessionalProfile?
  createdAt       DateTime              @default(now())
  updatedAt       DateTime              @updatedAt

  @@map("users")
}

model UserRole {
  userId  String
  roleId  Role
  user    User    @relation(fields: [userId], references: [id])
  @@id([userId, roleId])
  @@map("user_roles")
}

model Address {
  id        String   @id @default(uuid())
  userId    String   @unique
  country   String?
  state     String? 
  city      String?
  address   String? 
  zipCode   String?
  user      User     @relation(fields: [userId], references: [id])

  @@map("addresses")
}

model ProfessionalProfile {
  id              String    @id @default(uuid())
  userId          String    @unique
  companyName     String?
  passportNumber  String?
  passportExpire  DateTime?
  citizenNumber   String?
  guide_license   String?
  nma             DateTime?
  user            User      @relation(fields: [userId], references: [id])

  @@map("professional_profiles")
}